{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal\\\\React\\\\quiz-app1\\\\src\\\\components\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n\n  const [questionData, setQuestionData] = React.useState(() => {\n    let defaultInfo = [];\n\n    for (let n = 0; n < 4; n++) {\n      defaultInfo.push({\n        question: \"Loading...\",\n        correct_ans: \"\",\n        all_ans: [\"...\", \"...\", \"...\", \"...\"],\n        id: Math.floor(Math.random() * 999999999),\n        choosen_answer: \"...\"\n      });\n    }\n\n    return defaultInfo;\n  });\n  React.useEffect(() => {\n    fetch(\"https://opentdb.com/api.php?amount=5&category=18&difficulty=easy&type=multiple\").then(data => data.json()).then(responce => setQuestionData(responce.result.map(q => ({\n      question: q.question,\n      correct_ans: q.correct_answer,\n      all_ans: [...q.incorrect_answers, q.correct_answer].sort(() => 0.5 - Math.random()),\n      id: Math.floor(Math.random() * 999999999),\n      choosen_answer: \"...\"\n    }))));\n  });\n  console.log(questionData);\n  const questionDatajsx = questionData.map(q => /*#__PURE__*/_jsxDEV(Question, {\n    question: q.question,\n    correct_ans: q.correct_ans,\n    all_ans: q.all_ans,\n    choosen_answer: q.choosen_answer\n  }, q.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: questionDatajsx\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Quiz, \"Ol4J2zm5nCNXZBFJ/SVja3/3s7E=\");\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","Question","Quiz","questionData","setQuestionData","useState","defaultInfo","n","push","question","correct_ans","all_ans","id","Math","floor","random","choosen_answer","useEffect","fetch","then","data","json","responce","result","map","q","correct_answer","incorrect_answers","sort","console","log","questionDatajsx"],"sources":["C:/Personal/React/quiz-app1/src/components/Quiz.js"],"sourcesContent":["import React from \"react\";\r\nimport Question from \"./Question\";\r\n\r\nexport default function Quiz() {\r\n\r\n  const [questionData, setQuestionData] = React.useState(() => {\r\n    let defaultInfo = [];\r\n    for (let n = 0; n < 4; n++) {\r\n      defaultInfo.push({\r\n        question: \"Loading...\",\r\n        correct_ans: \"\",\r\n        all_ans: [\"...\", \"...\", \"...\", \"...\"],\r\n        id: Math.floor(Math.random() * 999999999),\r\n        choosen_answer: \"...\",\r\n      });\r\n    }\r\n    return defaultInfo;\r\n  });\r\n\r\n\r\n  \r\n  React.useEffect(() => {\r\n    fetch(\r\n      \"https://opentdb.com/api.php?amount=5&category=18&difficulty=easy&type=multiple\"\r\n    )\r\n      .then((data) => data.json())\r\n      .then((responce) =>\r\n        setQuestionData(\r\n          responce.result.map((q) => ({\r\n            question: q.question,\r\n            correct_ans: q.correct_answer,\r\n            all_ans: [...q.incorrect_answers, q.correct_answer].sort(\r\n              () => 0.5 - Math.random()\r\n            ),\r\n            id: Math.floor(Math.random() * 999999999),\r\n            choosen_answer: \"...\",\r\n          }))\r\n        )\r\n      );\r\n  });\r\n\r\n\r\n  console.log(questionData);\r\n\r\n  const questionDatajsx = questionData.map((q) => (\r\n    <Question\r\n      question={q.question}\r\n      correct_ans={q.correct_ans}\r\n      all_ans={q.all_ans}\r\n      key={q.id}\r\n      choosen_answer={q.choosen_answer}\r\n    />\r\n  ));\r\n  return <div>{questionDatajsx}</div>;\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,eAAe,SAASC,IAAT,GAAgB;EAAA;;EAE7B,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,KAAK,CAACK,QAAN,CAAe,MAAM;IAC3D,IAAIC,WAAW,GAAG,EAAlB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;MAC1BD,WAAW,CAACE,IAAZ,CAAiB;QACfC,QAAQ,EAAE,YADK;QAEfC,WAAW,EAAE,EAFE;QAGfC,OAAO,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,CAHM;QAIfC,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,SAA3B,CAJW;QAKfC,cAAc,EAAE;MALD,CAAjB;IAOD;;IACD,OAAOV,WAAP;EACD,CAZuC,CAAxC;EAgBAN,KAAK,CAACiB,SAAN,CAAgB,MAAM;IACpBC,KAAK,CACH,gFADG,CAAL,CAGGC,IAHH,CAGSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAHlB,EAIGF,IAJH,CAISG,QAAD,IACJlB,eAAe,CACbkB,QAAQ,CAACC,MAAT,CAAgBC,GAAhB,CAAqBC,CAAD,KAAQ;MAC1BhB,QAAQ,EAAEgB,CAAC,CAAChB,QADc;MAE1BC,WAAW,EAAEe,CAAC,CAACC,cAFW;MAG1Bf,OAAO,EAAE,CAAC,GAAGc,CAAC,CAACE,iBAAN,EAAyBF,CAAC,CAACC,cAA3B,EAA2CE,IAA3C,CACP,MAAM,MAAMf,IAAI,CAACE,MAAL,EADL,CAHiB;MAM1BH,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,SAA3B,CANsB;MAO1BC,cAAc,EAAE;IAPU,CAAR,CAApB,CADa,CALnB;EAiBD,CAlBD;EAqBAa,OAAO,CAACC,GAAR,CAAY3B,YAAZ;EAEA,MAAM4B,eAAe,GAAG5B,YAAY,CAACqB,GAAb,CAAkBC,CAAD,iBACvC,QAAC,QAAD;IACE,QAAQ,EAAEA,CAAC,CAAChB,QADd;IAEE,WAAW,EAAEgB,CAAC,CAACf,WAFjB;IAGE,OAAO,EAAEe,CAAC,CAACd,OAHb;IAKE,cAAc,EAAEc,CAAC,CAACT;EALpB,GAIOS,CAAC,CAACb,EAJT;IAAA;IAAA;IAAA;EAAA,QADsB,CAAxB;EASA,oBAAO;IAAA,UAAMmB;EAAN;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;GAnDuB7B,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}