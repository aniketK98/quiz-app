{"ast":null,"code":"import _objectSpread from \"C:\\\\Personal\\\\React\\\\quiz-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Personal\\\\React\\\\quiz-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Personal\\\\React\\\\quiz-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Personal\\\\React\\\\quiz-app\\\\src\\\\components\\\\Quiz.js\";\nimport React from \"react\";\nimport CheckAll from \"./CheckAll\";\nimport Question from \"./Question\";\nexport default function Quiz() {\n  var _this = this;\n\n  var _React$useState = React.useState(function () {\n    var defaultInfo = [];\n\n    for (var n = 0; n < 5; n++) {\n      defaultInfo.push({\n        question: \"Loading...\",\n        correct_ans: \"\",\n        all_ans: [\"...\", \"...\", \"...\", \"...\"],\n        id: Math.floor(Math.random() * 999999999),\n        choosen_answer: \"...\"\n      });\n    }\n\n    return defaultInfo;\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      questionData = _React$useState2[0],\n      setQuestionData = _React$useState2[1];\n\n  var _React$useState3 = React.useState({\n    totalCorrect: 0,\n    currentCorrect: 0,\n    check: false,\n    reset: 0\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      correctCounter = _React$useState4[0],\n      setCorrectCounter = _React$useState4[1];\n\n  React.useEffect(function () {\n    fetch(\"https://opentdb.com/api.php?amount=5&category=18&difficulty=easy&type=multiple\").then(function (data) {\n      return data.json();\n    }).then(function (responce) {\n      return setQuestionData(responce.results.map(function (q) {\n        return {\n          question: q.question,\n          correct_ans: q.correct_answer,\n          all_ans: [].concat(_toConsumableArray(q.incorrect_answers), [q.correct_answer]).sort(function () {\n            return 0.5 - Math.random();\n          }),\n          id: Math.floor(Math.random() * 999999999),\n          choosen_answer: \"...\"\n        };\n      }));\n    });\n  }, [correctCounter.reset]);\n\n  function chooseAns(event) {\n    console.log(event);\n    setQuestionData(function (prevQuestionData) {\n      return prevQuestionData.map(function (currentData) {\n        if (currentData.id == event.target.id) {\n          return _objectSpread({}, currentData, {\n            choosen_answer: event.target.value\n          });\n        } else {\n          return currentData;\n        }\n      });\n    });\n  }\n\n  function checkCorrect() {\n    var correct = 0;\n\n    for (var n = 0; n < questionData.length; n++) {\n      if (questionData[n].correct_answer == questionData[n].choosen_answer) {\n        correct += 1;\n      }\n    }\n\n    console.log(correct);\n    setCorrectCounter(function (prevCorrectCounter) {\n      return {\n        totalCorrect: prevCorrectCounter.totalCorrect + correct,\n        currentCorrect: correct,\n        check: true,\n        reset: prevCorrectCounter.reset\n      };\n    });\n  }\n\n  function reset() {\n    setQuestionData(function () {\n      var defaultInfo = [];\n\n      for (var n = 0; n < 5; n++) {\n        defaultInfo.push({\n          question: \"Loading...\",\n          correct_ans: \"\",\n          all_ans: [\"...\", \"...\", \"...\", \"...\"],\n          id: Math.floor(Math.random() * 999999999),\n          choosen_answer: \"...\"\n        });\n      }\n\n      return defaultInfo;\n    });\n    setCorrectCounter(function (prevState) {\n      return {\n        totalCorrect: prevState.totalCorrect,\n        currentCorrect: 0,\n        check: false,\n        reset: prevState.reset + 1\n      };\n    });\n  }\n\n  var count = 1;\n  var questionDatajsx = questionData.map(function (q) {\n    return /*#__PURE__*/React.createElement(Question, {\n      no: count++,\n      question: q.question,\n      correct_ans: q.correct_ans,\n      all_ans: q.all_ans,\n      key: q.id,\n      id: q.id,\n      choosen_answer: q.choosen_answer,\n      chooseAns: chooseAns,\n      check: correctCounter.check,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-quiz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"heading-quiz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, \"<\", \"TECH TRIVIA \", \" />\"), questionDatajsx, /*#__PURE__*/React.createElement(CheckAll, {\n    correctCounter: correctCounter,\n    handleClick: checkCorrect,\n    handleReset: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"names":["React","CheckAll","Question","Quiz","useState","defaultInfo","n","push","question","correct_ans","all_ans","id","Math","floor","random","choosen_answer","questionData","setQuestionData","totalCorrect","currentCorrect","check","reset","correctCounter","setCorrectCounter","useEffect","fetch","then","data","json","responce","results","map","q","correct_answer","incorrect_answers","sort","chooseAns","event","console","log","prevQuestionData","currentData","target","value","checkCorrect","correct","length","prevCorrectCounter","prevState","count","questionDatajsx"],"sources":["C:/Personal/React/quiz-app/src/components/Quiz.js"],"sourcesContent":["import React from \"react\";\r\nimport CheckAll from \"./CheckAll\";\r\nimport Question from \"./Question\";\r\n\r\nexport default function Quiz() {\r\n  const [questionData, setQuestionData] = React.useState(() => {\r\n    let defaultInfo = [];\r\n    for (let n = 0; n < 5; n++) {\r\n      defaultInfo.push({\r\n        question: \"Loading...\",\r\n        correct_ans: \"\",\r\n        all_ans: [\"...\", \"...\", \"...\", \"...\"],\r\n        id: Math.floor(Math.random() * 999999999),\r\n        choosen_answer: \"...\",\r\n      });\r\n    }\r\n    return defaultInfo;\r\n  });\r\n\r\n  const [correctCounter, setCorrectCounter] = React.useState({\r\n    totalCorrect: 0,\r\n    currentCorrect: 0,\r\n    check: false,\r\n    reset: 0,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    fetch(\r\n      \"https://opentdb.com/api.php?amount=5&category=18&difficulty=easy&type=multiple\"\r\n    )\r\n      .then((data) => data.json())\r\n      .then((responce) =>\r\n        setQuestionData(\r\n          responce.results.map((q) => ({\r\n            question: q.question,\r\n            correct_ans: q.correct_answer,\r\n            all_ans: [...q.incorrect_answers, q.correct_answer].sort(\r\n              () => 0.5 - Math.random()\r\n            ),\r\n            id: Math.floor(Math.random() * 999999999),\r\n            choosen_answer: \"...\",\r\n          }))\r\n        )\r\n      );\r\n  }, [correctCounter.reset]);\r\n\r\n  function chooseAns(event) {\r\n    console.log(event);\r\n    setQuestionData((prevQuestionData) =>\r\n      prevQuestionData.map((currentData) => {\r\n        if (currentData.id == event.target.id) {\r\n          return { ...currentData, choosen_answer: event.target.value };\r\n        } else {\r\n          return currentData;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  function checkCorrect() {\r\n    let correct = 0;\r\n    for (let n = 0; n < questionData.length; n++) {\r\n      if (questionData[n].correct_answer == questionData[n].choosen_answer) {\r\n        correct += 1;\r\n      }\r\n    }\r\n    console.log(correct)\r\n    setCorrectCounter((prevCorrectCounter) => ({\r\n      totalCorrect: prevCorrectCounter.totalCorrect + correct,\r\n      currentCorrect: correct,\r\n      check: true,\r\n      reset: prevCorrectCounter.reset,\r\n    }));\r\n  }\r\n\r\n  function reset() {\r\n    setQuestionData(() => {\r\n      let defaultInfo = [];\r\n      for (let n = 0; n < 5; n++) {\r\n        defaultInfo.push({\r\n          question: \"Loading...\",\r\n          correct_ans: \"\",\r\n          all_ans: [\"...\", \"...\", \"...\", \"...\"],\r\n          id: Math.floor(Math.random() * 999999999),\r\n          choosen_answer: \"...\",\r\n        });\r\n      }\r\n      return defaultInfo;\r\n    });\r\n    setCorrectCounter((prevState) => ({\r\n      totalCorrect: prevState.totalCorrect,\r\n      currentCorrect: 0,\r\n      check: false,\r\n      reset: prevState.reset + 1,\r\n    }));\r\n  }\r\n  let count=1;\r\n\r\n  const questionDatajsx = questionData.map((q) => {\r\n    return(\r\n    <Question\r\n      no={count++}\r\n      question={q.question}\r\n      correct_ans={q.correct_ans}\r\n      all_ans={q.all_ans}\r\n      key={q.id}\r\n      id={q.id}\r\n      choosen_answer={q.choosen_answer}\r\n      chooseAns={chooseAns}\r\n      check={correctCounter.check}\r\n    />);\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <div className=\"container-quiz\">\r\n      <h1 className=\"heading-quiz\">{\"<\"}TECH TRIVIA {\" />\"}</h1>\r\n        {questionDatajsx}\r\n        <CheckAll\r\n          correctCounter={correctCounter}\r\n          handleClick={checkCorrect}\r\n          handleReset={reset}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}