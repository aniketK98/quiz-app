{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal\\\\React\\\\quiz-app1\\\\src\\\\components\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport CheckAll from \"./CheckAll\";\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n\n  const [questionData, setQuestionData] = React.useState(() => {\n    let defaultInfo = [];\n\n    for (let n = 0; n < 5; n++) {\n      defaultInfo.push({\n        question: \"Loading...\",\n        correct_ans: \"\",\n        all_ans: [\"...\", \"...\", \"...\", \"...\"],\n        id: Math.floor(Math.random() * 999999999),\n        choosen_answer: \"...\"\n      });\n    }\n\n    return defaultInfo;\n  });\n  const [correctCounter, setCorrectCounter] = React.useState({\n    totalCorrect: 0,\n    currentCorrect: 0,\n    check: false,\n    reset: 0\n  });\n  React.useEffect(() => {\n    fetch(\"https://opentdb.com/api.php?amount=5&category=18&difficulty=easy&type=multiple\").then(data => data.json()).then(responce => setQuestionData(responce.results.map(q => ({\n      question: q.question,\n      correct_ans: q.correct_answer,\n      all_ans: [...q.incorrect_answers, q.correct_answer].sort(() => 0.5 - Math.random()),\n      id: Math.floor(Math.random() * 999999999),\n      choosen_answer: \"...\"\n    }))));\n  }, [correctCounter.reset]);\n\n  function chooseAns(event) {\n    console.log(event);\n    setQuestionData(prevQuestionData => prevQuestionData.map(currentData => {\n      if (currentData.id == event.target.id) {\n        return { ...currentData,\n          choosen_answer: event.target.value\n        };\n      } else {\n        return currentData;\n      }\n    }));\n  }\n\n  function checkCorrect() {\n    let correct = 0;\n\n    for (let n = 0; n < questionData.length; n++) {\n      if (questionData[n].correct_answer == questionData[n].choosen_answer) {\n        correct += 1;\n      }\n    }\n\n    setCorrectCounter(prevCorrectCounter => ({\n      totalCorrect: prevCorrectCounter.totalCorrect + correct,\n      currentCorrect: correct,\n      check: true,\n      reset: prevCorrectCounter.reset\n    }));\n  }\n\n  function reset() {\n    setQuestionData(() => {\n      let defaultInfo = [];\n\n      for (let n = 0; n < 5; n++) {\n        defaultInfo.push({\n          question: \"Loading...\",\n          correct_ans: \"\",\n          all_ans: [\"...\", \"...\", \"...\", \"...\"],\n          id: Math.floor(Math.random() * 999999999),\n          choosen_answer: \"...\"\n        });\n      }\n\n      return defaultInfo;\n    });\n    setCorrectCounter(prevState => ({\n      totalCorrect: prevState.totalCorrect,\n      currentCorrect: 0,\n      check: false,\n      reset: prevState.reset + 1\n    }));\n  }\n\n  const questionDatajsx = questionData.map(q => {\n    let count;\n\n    /*#__PURE__*/\n    _jsxDEV(Question, {\n      question: q.question,\n      correct_ans: q.correct_ans,\n      all_ans: q.all_ans,\n      id: q.id,\n      choosen_answer: q.choosen_answer,\n      chooseAns: chooseAns,\n      check: correctCounter.check\n    }, q.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-quiz\",\n      children: [questionDatajsx, /*#__PURE__*/_jsxDEV(CheckAll, {\n        correctCounter: correctCounter,\n        handleClick: checkCorrect,\n        handleReset: reset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quiz, \"kI4/7lQKTCnkfhEIkWEOZw6AmK0=\");\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","CheckAll","Question","Quiz","questionData","setQuestionData","useState","defaultInfo","n","push","question","correct_ans","all_ans","id","Math","floor","random","choosen_answer","correctCounter","setCorrectCounter","totalCorrect","currentCorrect","check","reset","useEffect","fetch","then","data","json","responce","results","map","q","correct_answer","incorrect_answers","sort","chooseAns","event","console","log","prevQuestionData","currentData","target","value","checkCorrect","correct","length","prevCorrectCounter","prevState","questionDatajsx","count"],"sources":["C:/Personal/React/quiz-app1/src/components/Quiz.js"],"sourcesContent":["import React from \"react\";\r\nimport CheckAll from \"./CheckAll\";\r\nimport Question from \"./Question\";\r\n\r\nexport default function Quiz() {\r\n  const [questionData, setQuestionData] = React.useState(() => {\r\n    let defaultInfo = [];\r\n    for (let n = 0; n < 5; n++) {\r\n      defaultInfo.push({\r\n        question: \"Loading...\",\r\n        correct_ans: \"\",\r\n        all_ans: [\"...\", \"...\", \"...\", \"...\"],\r\n        id: Math.floor(Math.random() * 999999999),\r\n        choosen_answer: \"...\",\r\n      });\r\n    }\r\n    return defaultInfo;\r\n  });\r\n\r\n  const [correctCounter, setCorrectCounter] = React.useState({\r\n    totalCorrect: 0,\r\n    currentCorrect: 0,\r\n    check: false,\r\n    reset: 0,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    fetch(\r\n      \"https://opentdb.com/api.php?amount=5&category=18&difficulty=easy&type=multiple\"\r\n    )\r\n      .then((data) => data.json())\r\n      .then((responce) =>\r\n        setQuestionData(\r\n          responce.results.map((q) => ({\r\n            question: q.question,\r\n            correct_ans: q.correct_answer,\r\n            all_ans: [...q.incorrect_answers, q.correct_answer].sort(\r\n              () => 0.5 - Math.random()\r\n            ),\r\n            id: Math.floor(Math.random() * 999999999),\r\n            choosen_answer: \"...\",\r\n          }))\r\n        )\r\n      );\r\n  }, [correctCounter.reset]);\r\n\r\n  function chooseAns(event) {\r\n    console.log(event);\r\n    setQuestionData((prevQuestionData) =>\r\n      prevQuestionData.map((currentData) => {\r\n        if (currentData.id == event.target.id) {\r\n          return { ...currentData, choosen_answer: event.target.value };\r\n        } else {\r\n          return currentData;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  function checkCorrect() {\r\n    let correct = 0;\r\n    for (let n = 0; n < questionData.length; n++) {\r\n      if (questionData[n].correct_answer == questionData[n].choosen_answer) {\r\n        correct += 1;\r\n      }\r\n    }\r\n    setCorrectCounter((prevCorrectCounter) => ({\r\n      totalCorrect: prevCorrectCounter.totalCorrect + correct,\r\n      currentCorrect: correct,\r\n      check: true,\r\n      reset: prevCorrectCounter.reset,\r\n    }));\r\n  }\r\n\r\n  function reset() {\r\n    setQuestionData(() => {\r\n      let defaultInfo = [];\r\n      for (let n = 0; n < 5; n++) {\r\n        defaultInfo.push({\r\n          question: \"Loading...\",\r\n          correct_ans: \"\",\r\n          all_ans: [\"...\", \"...\", \"...\", \"...\"],\r\n          id: Math.floor(Math.random() * 999999999),\r\n          choosen_answer: \"...\",\r\n        });\r\n      }\r\n      return defaultInfo;\r\n    });\r\n    setCorrectCounter((prevState) => ({\r\n      totalCorrect: prevState.totalCorrect,\r\n      currentCorrect: 0,\r\n      check: false,\r\n      reset: prevState.reset + 1,\r\n    }));\r\n  }\r\n\r\n  const questionDatajsx = questionData.map((q) => {\r\n    let count\r\n    <Question\r\n      question={q.question}\r\n      correct_ans={q.correct_ans}\r\n      all_ans={q.all_ans}\r\n      key={q.id}\r\n      id={q.id}\r\n      choosen_answer={q.choosen_answer}\r\n      chooseAns={chooseAns}\r\n      check={correctCounter.check}\r\n    />;\r\n  });\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <div className=\"container-quiz\">\r\n        {questionDatajsx}\r\n        <CheckAll\r\n          correctCounter={correctCounter}\r\n          handleClick={checkCorrect}\r\n          handleReset={reset}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}