{"version":3,"sources":["components/Start.js","components/CheckAll.js","components/Question.js","components/Quiz.js","App.js","index.js"],"names":["Start","props","react_default","a","createElement","className","onClick","handleClick","CheckAll","correctCounter","check","handleReset","currentCorrect","resultsDisplay","reset","totalCorrect","totalResultsDisplay","Question","buttonColor","index","choosen_answer","all_ans","correct_ans","background","borderColor","no","question","chooseAns","id","value","style","Quiz","_React$useState","React","useState","defaultInfo","n","push","Math","floor","random","_React$useState2","Object","slicedToArray","questionData","setQuestionData","_React$useState3","_React$useState4","setCorrectCounter","event","console","log","prevQuestionData","map","currentData","target","objectSpread","useEffect","fetch","then","data","json","responce","results","q","correct_answer","concat","toConsumableArray","incorrect_answers","sort","count","questionDatajsx","key","correct","length","prevCorrectCounter","prevState","App","isFirstTime","setFirstTime","prevFirst","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.53506bdd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Start(props) {\r\n  return (\r\n    <div className=\"root\">\r\n      <div className=\"container\">\r\n        <h1 className=\"app-name\">{\"<\"}TECH TRIVIA {\" />\"}</h1>\r\n        <button className=\"start-button\" onClick={props.handleClick}>Start</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function CheckAll(props) {\r\n  function resultsDisplay() {\r\n    if (props.correctCounter.check) {\r\n      return <h5>You got {props.correctCounter.currentCorrect}/5 correct</h5>;\r\n    }\r\n  }\r\n  function totalResultsDisplay() {\r\n    if (props.correctCounter.reset > 0) {\r\n      if (props.correctCounter.check) {\r\n        return (\r\n          <h5>\r\n            Total correct {props.correctCounter.totalCorrect}/\r\n            {(props.correctCounter.reset + 1) * 5}\r\n          </h5>\r\n        );\r\n      } else {\r\n        return (\r\n          <h5>\r\n            Total correct {props.correctCounter.totalCorrect}/\r\n            {props.correctCounter.reset * 5}\r\n          </h5>\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"checkAll\">\r\n      <button\r\n      className=\"submit-button\"\r\n        onClick={\r\n          !props.correctCounter.check ? props.handleClick : props.handleReset\r\n        }\r\n      >\r\n        {props.correctCounter.check ? \"Try New questions\" : \"Check Result\"}\r\n      </button>\r\n      {resultsDisplay()}\r\n      {totalResultsDisplay()}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Question(props) {\r\n  function buttonColor(index) {\r\n    if (props.choosen_answer == props.all_ans[index]) {\r\n      if (props.check && props.choosen_answer != props.correct_ans) {\r\n        return { background: \"#f29ba7\", borderColor: \"red\" };\r\n      } else if (props.check && props.choosen_answer == props.correct_ans) {\r\n        return { background: \"#7bc983\", borderColor: \"#ff9000\" };\r\n      } else {\r\n        return { background: \"#7e8afc\", borderColor: \"#034a16\" };\r\n      }\r\n    }\r\n    if (props.check && props.all_ans[index] === props.correct_ans) {\r\n      return { background: \"#c8f7c6\" };\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h4>{\"Q.\" + props.no + \") \" + props.question}</h4>\r\n      <div className=\"options\">\r\n        <button\r\n          className=\"option-button\"\r\n          onClick={props.check ? null : props.chooseAns}\r\n          id={props.id}\r\n          value={props.check ? null : props.all_ans[0]}\r\n          style={buttonColor(0)}\r\n        >\r\n          {props.all_ans[0]}\r\n        </button>\r\n        <button\r\n          className=\"option-button\"\r\n          onClick={props.check ? null : props.chooseAns}\r\n          id={props.id}\r\n          value={props.all_ans[1]}\r\n          style={buttonColor(1)}\r\n        >\r\n          {props.all_ans[1]}\r\n        </button>\r\n        <button\r\n          className=\"option-button\"\r\n          onClick={props.check ? null : props.chooseAns}\r\n          id={props.id}\r\n          value={props.all_ans[2]}\r\n          style={buttonColor(2)}\r\n        >\r\n          {props.all_ans[2]}\r\n        </button>\r\n        <button\r\n          className=\"option-button\"\r\n          onClick={props.chooseAns}\r\n          id={props.id}\r\n          value={props.all_ans[3]}\r\n          style={buttonColor(3)}\r\n        >\r\n          {props.all_ans[3]}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CheckAll from \"./CheckAll\";\r\nimport Question from \"./Question\";\r\n\r\nexport default function Quiz() {\r\n  const [questionData, setQuestionData] = React.useState(() => {\r\n    let defaultInfo = [];\r\n    for (let n = 0; n < 5; n++) {\r\n      defaultInfo.push({\r\n        question: \"Loading...\",\r\n        correct_ans: \"\",\r\n        all_ans: [\"...\", \"...\", \"...\", \"...\"],\r\n        id: Math.floor(Math.random() * 999999999),\r\n        choosen_answer: \"...\",\r\n      });\r\n    }\r\n    return defaultInfo;\r\n  });\r\n\r\n  const [correctCounter, setCorrectCounter] = React.useState({\r\n    totalCorrect: 0,\r\n    currentCorrect: 0,\r\n    check: false,\r\n    reset: 0,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    fetch(\r\n      \"https://opentdb.com/api.php?amount=5&category=18&difficulty=easy&type=multiple\"\r\n    )\r\n      .then((data) => data.json())\r\n      .then((responce) =>\r\n        setQuestionData(\r\n          responce.results.map((q) => ({\r\n            question: q.question,\r\n            correct_ans: q.correct_answer,\r\n            all_ans: [...q.incorrect_answers, q.correct_answer].sort(\r\n              () => 0.5 - Math.random()\r\n            ),\r\n            id: Math.floor(Math.random() * 999999999),\r\n            choosen_answer: \"...\",\r\n          }))\r\n        )\r\n      );\r\n  }, [correctCounter.reset]);\r\n\r\n  function chooseAns(event) {\r\n    console.log(event);\r\n    setQuestionData((prevQuestionData) =>\r\n      prevQuestionData.map((currentData) => {\r\n        if (currentData.id == event.target.id) {\r\n          return { ...currentData, choosen_answer: event.target.value };\r\n        } else {\r\n          return currentData;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  function checkCorrect() {\r\n    let correct = 0;\r\n    for (let n = 0; n < questionData.length; n++) {\r\n      if (questionData[n].correct_ans == questionData[n].choosen_answer) {\r\n        correct += 1;\r\n      }\r\n    }\r\n    console.log(correct)\r\n    setCorrectCounter((prevCorrectCounter) => ({\r\n      totalCorrect: prevCorrectCounter.totalCorrect + correct,\r\n      currentCorrect: correct,\r\n      check: true,\r\n      reset: prevCorrectCounter.reset,\r\n    }));\r\n  }\r\n\r\n  function reset() {\r\n    setQuestionData(() => {\r\n      let defaultInfo = [];\r\n      for (let n = 0; n < 5; n++) {\r\n        defaultInfo.push({\r\n          question: \"Loading...\",\r\n          correct_ans: \"\",\r\n          all_ans: [\"...\", \"...\", \"...\", \"...\"],\r\n          id: Math.floor(Math.random() * 999999999),\r\n          choosen_answer: \"...\",\r\n        });\r\n      }\r\n      return defaultInfo;\r\n    });\r\n    setCorrectCounter((prevState) => ({\r\n      totalCorrect: prevState.totalCorrect,\r\n      currentCorrect: 0,\r\n      check: false,\r\n      reset: prevState.reset + 1,\r\n    }));\r\n  }\r\n  let count=1;\r\n\r\n  const questionDatajsx = questionData.map((q) => {\r\n    return(\r\n    <Question\r\n      no={count++}\r\n      question={q.question}\r\n      correct_ans={q.correct_ans}\r\n      all_ans={q.all_ans}\r\n      key={q.id}\r\n      id={q.id}\r\n      choosen_answer={q.choosen_answer}\r\n      chooseAns={chooseAns}\r\n      check={correctCounter.check}\r\n    />);\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <div className=\"container-quiz\">\r\n      <h1 className=\"heading-quiz\">{\"<\"}TECH TRIVIA {\" />\"}</h1>\r\n        {questionDatajsx}\r\n        <CheckAll\r\n          correctCounter={correctCounter}\r\n          handleClick={checkCorrect}\r\n          handleReset={reset}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport React from \"react\";\nimport Start from \"./components/Start\";\nimport Quiz from \"./components/Quiz\";\n\n\n\n\nfunction App() {\n  const [isFirstTime, setFirstTime] = React.useState(false);\n\n  function startQuiz() {\n    setFirstTime((prevFirst) => !prevFirst);\n  }\n\n  return (\n    <div>\n      {isFirstTime ? <Quiz /> : <Start handleClick={startQuiz} />}</div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}